<?php
// –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è lecharmie.com
// –ü–æ–º–µ—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å WordPress –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ

error_reporting(E_ALL);
ini_set('display_errors', 1);

require_once('wp-config.php');
require_once('wp-load.php');

echo "<h1>üîç –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Gift Cards Updater</h1>";

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –∫ –ø–ª–∞–≥–∏–Ω—É
$possible_paths = [
    'giftcards-for-woocommerce/custom-giftcards-for-woocommerce.php',
    'custom-giftcards-for-woocommerce/custom-giftcards-for-woocommerce.php', 
    'gift-cards-woocommerce/custom-giftcards-for-woocommerce.php',
    'custom-gift-cards-woocommerce/custom-giftcards-for-woocommerce.php'
];

$plugin_file = null;
$plugin_slug = null;

foreach ($possible_paths as $path) {
    $full_path = WP_PLUGIN_DIR . '/' . $path;
    if (file_exists($full_path)) {
        $plugin_file = $full_path;
        $plugin_slug = $path;
        echo "<p style='color: green;'>‚úÖ –ù–∞–π–¥–µ–Ω –ø–ª–∞–≥–∏–Ω: $path</p>";
        break;
    }
}

if (!$plugin_file) {
    echo "<p style='color: red;'>‚ùå –ü–ª–∞–≥–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É –∏–∑ –ø—É—Ç–µ–π!</p>";
    foreach ($possible_paths as $path) {
        echo "–ü—Ä–æ–≤–µ—Ä–µ–Ω: " . WP_PLUGIN_DIR . '/' . $path . "<br>";
    }
    exit;
}

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–Ω–∞
$active_plugins = get_option('active_plugins', array());
$is_active = in_array($plugin_slug, $active_plugins);
echo "<strong>–ü–ª–∞–≥–∏–Ω –∞–∫—Ç–∏–≤–µ–Ω:</strong> " . ($is_active ? "–î–ê" : "–ù–ï–¢") . "<br>";

if (!$is_active) {
    echo "<p style='color: red;'>‚ùå –ü–†–û–ë–õ–ï–ú–ê: –ü–ª–∞–≥–∏–Ω –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω! –°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤.</p>";
}

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
$plugin_data = get_plugin_data($plugin_file);
echo "<strong>–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:</strong> " . $plugin_data['Version'] . "<br>";

// 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
echo "<h2>üìä –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–ª–∞–≥–∏–Ω–∞:</h2>";
if (defined('CGFWC_VERSION')) {
    echo "<strong>CGFWC_VERSION:</strong> " . CGFWC_VERSION . "<br>";
} else {
    echo "<p style='color: red;'>‚ùå CGFWC_VERSION –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞</p>";
}

if (defined('CGFWC_PLUGIN_DIR')) {
    echo "<strong>CGFWC_PLUGIN_DIR:</strong> " . CGFWC_PLUGIN_DIR . "<br>";
} else {
    echo "<p style='color: red;'>‚ùå CGFWC_PLUGIN_DIR –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞</p>";
}

// 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å GitHub Updater
echo "<h2>üîÑ GitHub Updater –∫–ª–∞—Å—Å:</h2>";
if (class_exists('CGFWC_GitHub_Updater')) {
    echo "<p style='color: green;'>‚úÖ –ö–ª–∞—Å—Å CGFWC_GitHub_Updater –∑–∞–≥—Ä—É–∂–µ–Ω</p>";
} else {
    echo "<p style='color: red;'>‚ùå –ö–ª–∞—Å—Å CGFWC_GitHub_Updater –ù–ï –∑–∞–≥—Ä—É–∂–µ–Ω</p>";
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Ä—É—á–Ω—É—é
    $updater_file = dirname($plugin_file) . '/includes/github-updater.php';
    if (file_exists($updater_file)) {
        echo "–ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å: $updater_file<br>";
        include_once $updater_file;
        if (class_exists('CGFWC_GitHub_Updater')) {
            echo "<p style='color: green;'>‚úÖ –ö–ª–∞—Å—Å –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Å–ª–µ —Ä—É—á–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</p>";
        }
    }
}

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö—É–∫–∏ WordPress
global $wp_filter;
echo "<h2>üîó –•—É–∫–∏ WordPress:</h2>";

$hooks_to_check = [
    'pre_set_site_transient_update_plugins',
    'plugins_api', 
    'admin_notices',
    'plugins_loaded'
];

foreach ($hooks_to_check as $hook) {
    $exists = isset($wp_filter[$hook]);
    echo "<strong>$hook:</strong> " . ($exists ? "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω" : "–ù–ï –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω") . "<br>";
    
    if ($exists && isset($wp_filter[$hook]->callbacks)) {
        foreach ($wp_filter[$hook]->callbacks as $priority => $callbacks) {
            foreach ($callbacks as $callback) {
                if (is_array($callback['function']) && isset($callback['function'][0])) {
                    if (is_object($callback['function'][0]) && get_class($callback['function'][0]) === 'CGFWC_GitHub_Updater') {
                        echo "&nbsp;&nbsp;‚Ü≥ <span style='color: green;'>CGFWC_GitHub_Updater –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ $hook</span><br>";
                    }
                }
            }
        }
    }
}

// 7. –¢–µ—Å—Ç GitHub API
echo "<h2>üåê GitHub API —Ç–µ—Å—Ç:</h2>";
$github_url = "https://api.github.com/repos/butuzoff/giftcards-for-woocommerce/releases/latest";
$response = wp_remote_get($github_url, array(
    'timeout' => 15,
    'headers' => array(
        'Accept' => 'application/vnd.github.v3+json',
        'User-Agent' => 'WordPress/' . get_bloginfo('version') . '; ' . home_url()
    )
));

if (is_wp_error($response)) {
    echo "<p style='color: red;'>‚ùå –û—à–∏–±–∫–∞ API: " . $response->get_error_message() . "</p>";
} else {
    $code = wp_remote_retrieve_response_code($response);
    echo "<strong>HTTP –∫–æ–¥:</strong> $code<br>";
    
    if ($code === 200) {
        $data = json_decode(wp_remote_retrieve_body($response), true);
        echo "<strong>–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è GitHub:</strong> " . $data['tag_name'] . "<br>";
        echo "<strong>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</strong> " . $data['published_at'] . "<br>";
        
        // –¢–µ—Å—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π
        $current = $plugin_data['Version'];
        $github = $data['tag_name'];
        
        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å v –µ—Å–ª–∏ –µ—Å—Ç—å
        $github_clean = ltrim($github, 'v');
        
        echo "<h3>üîç –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π:</h3>";
        echo "<strong>–¢–µ–∫—É—â–∞—è:</strong> $current<br>";
        echo "<strong>GitHub:</strong> $github (–æ—á–∏—â–µ–Ω–Ω–∞—è: $github_clean)<br>";
        
        $comparison = version_compare($current, $github_clean, '<');
        echo "<strong>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ:</strong> " . ($comparison ? "–î–ê" : "–ù–ï–¢") . "<br>";
        echo "<strong>version_compare('$current', '$github_clean', '<'):</strong> " . ($comparison ? "true" : "false") . "<br>";
        
    } else {
        echo "<p style='color: red;'>‚ùå HTTP –æ—à–∏–±–∫–∞: $code</p>";
    }
}

// 8. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
echo "<h2>‚ö° –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç:</h2>";

if (class_exists('CGFWC_GitHub_Updater') && $is_active) {
    // –û—á–∏—â–∞–µ–º –∫—ç—à
    delete_site_transient('update_plugins');
    delete_transient('cgfwc_github_latest');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º
    $updater = new CGFWC_GitHub_Updater($plugin_file);
    
    // –≠–º—É–ª–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    $transient = new stdClass();
    $transient->checked = array($plugin_slug => $plugin_data['Version']);
    
    $result = $updater->check_github_update($transient);
    
    if (isset($result->response[$plugin_slug])) {
        echo "<p style='color: green;'>‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ!</p>";
        echo "<strong>–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:</strong> " . $result->response[$plugin_slug]->new_version . "<br>";
    } else {
        echo "<p style='color: red;'>‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–∞–∂–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ</p>";
    }
} else {
    echo "<p style='color: red;'>‚ùå –ù–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç</p>";
}

// 9. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "<h2>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h2>";
if (!$is_active) {
    echo "<p style='color: red;'><strong>–ö–†–ò–¢–ò–ß–ù–û:</strong> –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø–ª–∞–≥–∏–Ω!</p>";
}

echo "<p>1. –ï—Å–ª–∏ –ø–ª–∞–≥–∏–Ω –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω - –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ<br>";
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ PHP –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫<br>";
echo "3. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –Ω–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å –¥—Ä—É–≥–∏–º–∏ –ø–ª–∞–≥–∏–Ω–∞–º–∏<br>";
echo "4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ</p>";
